# Build stage
FROM node:lts-alpine AS builder
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY prisma ./prisma/

# Install dependencies
RUN npm ci --only=production && \
    npm install -g prisma && \
    npx prisma generate

# Copy source code
COPY . .

# Build application
RUN npm run build

# Production stage
FROM node:lts-alpine AS production
LABEL authors="OpenHealth"

# Install system dependencies
RUN apk add --no-cache graphicsmagick curl && \
    adduser --disabled-password ohuser

WORKDIR /app

# Copy built application from builder
COPY --from=builder --chown=ohuser:ohuser /app/.next ./.next
COPY --from=builder --chown=ohuser:ohuser /app/public ./public
COPY --from=builder --chown=ohuser:ohuser /app/package*.json ./
COPY --from=builder --chown=ohuser:ohuser /app/prisma ./prisma
COPY --from=builder --chown=ohuser:ohuser /app/node_modules ./node_modules
COPY --from=builder --chown=ohuser:ohuser /app/messages ./messages

# Create uploads directory
RUN mkdir -p public/uploads && chown -R ohuser:ohuser public/uploads

USER ohuser
EXPOSE 3000

# Health check endpoint
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:3000/api/health || exit 1

# Use node directly for better signal handling
CMD ["node", ".next/standalone/server.js"]