version: '3.8'

services:
  database:
    image: postgres:alpine
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - openhealth-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  docling-serve:
    image: ghcr.io/ds4sd/docling-serve:latest
    restart: unless-stopped
    networks:
      - openhealth-network

  # IMPORTANT: You need to build this image first on your Docker host
  # Run: docker build -f Dockerfile.production -t openhealth:latest .
  # from the project directory before deploying this stack
  app:
    image: openhealth:latest
    depends_on:
      - database
      - docling-serve
    volumes:
      - app_data:/app/public/uploads
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - openhealth-network
    environment:
      DATABASE_URL: ${DATABASE_URL}
      NODE_ENV: production
      AUTH_SECRET: ${AUTH_SECRET}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      NEXT_PUBLIC_URL: ${NEXT_PUBLIC_URL}
      DEPLOYMENT_ENV: ${DEPLOYMENT_ENV:-local}
      NEXT_PUBLIC_DEPLOYMENT_ENV: ${DEPLOYMENT_ENV:-local}
      AUTH_TRUST_HOST: ${NEXT_PUBLIC_URL}

networks:
  openhealth-network:
    driver: bridge

volumes:
  postgres_data:
  app_data: